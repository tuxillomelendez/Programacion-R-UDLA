p <- ggplot(sueldos, aes(x=job_title, y=salary_in_usd)) + geom_boxplot()
p
# Creamos el gráfico
p <- ggplot(sueldos, aes(x=company_location, y=salary_in_usd)) + geom_boxplot()
p
# Creamos el gráfico
p <- ggplot(sueldos, aes(x=company_size, y=salary_in_usd)) + geom_boxplot()
p
# Resumen de los datos
dim(sueldos) # dimensiones del conjunto de datos
# Creamos el gráfico
p <- ggplot(sueldos, aes(x=job_title, y=salary_in_usd)) + geom_boxplot()
p
# Creamos el gráfico
p <- ggplot(sueldos, aes(x=company_location, y=salary_in_usd)) + geom_boxplot()
p
# Para etiquetas horizontales
p + theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5))
# Para etiquetas verticales
p + theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10))
p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))
# Creamos una nueva columna para Base.MSRP en miles de dólares
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
# Creamos el gráfico
p <- ggplot(sueldos, aes(x=company_location, y=salary_in_usd_mm)) + geom_boxplot()
# Para etiquetas horizontales
p + theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5))
p <- p + labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "Por pais", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
)+theme(plot.title = element_text(hjust = 0.5))
p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))
names(sueldos) # nombres de las columnas
p <- ggplot(sueldos, aes(x=experience_level, y=salary_in_usd_mm)) + geom_boxplot()
p
p <- ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot()
p
n <- 100
result <- 1
for (i in 1:n)
result <- result * i
for (i in 1:n)
result <- result * i
n <- 100
result <- 1
for (i in 1:n)
result <- result * i
1:n
for (i in 1:n)
print(i)
result <- result * i
for (i in 1:n)
print(i)
result <- result * i
result
for (i in 1:n)
print(i)
result <- result * i
sueldos <- read.csv("salaries.csv", sep = ";")
View(sueldos)
p <- ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot()
p
summary(sueldos) # resumen estadístico del conjunto de datos
# Creamos una nueva columna para salary_in_usd en miles de dólares
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
p <- ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot()
p
library(tidyverse)
?as_tibble
?as_tibble()
as_tibble(sueldos)
view(sueldos)
datos::vuelos %>%
print(n = 10, width = Inf)
?tibble
package?tibble
sueldos %>% filter(employee_residence == "AU")
sueldos %>% filter(employee_residence == "AU")
sueldos %>% select(employee_residence) %>% distinct()
view(sueldos)
sueldos %>% select( work_year ) %>% distinct()
sueldos %>% select(experience_level) %>% distinct()
sueldos %>% select(salary_currency) %>% distinct()
mtcars |> group_by(cyl) |> summarize(avg = mean(mpg))
sueldos %>% group_by(experience_level) %>% summarise(n())
sueldos %>% group_by(company_size)
sueldos %>% group_by(company_size) %>% summarise(sum(salary_in_usd))
sueldos %>% group_by(company_size) %>% summarise(sum(salary_in_usd)) %>% summarise(n())
sueldos %>% group_by(company_size) %>% summarise(sum(salary_in_usd))
sueldos %>% group_by(company_size) %>% summarise(total_salary = sum(salary_in_usd), count = n())
?summarise
# Creamos una nueva columna para salary_in_usd en miles de dólares
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
View(sueldos)
sueldos %>% group_by(company_size)
sueldos %>% group_by(company_size) %>% summarise(total_salary = sum(salary_in_usd), count = n())
View(sueldos)
sueldos %>% select(work_year, experience_level, job_title)
select(sueldos, work_year, experience_level)
?select
sueldos %>% arrange(salary_in_usd)
sueldos %>% select(work_year, experience_level, job_title) %>% arrange(salary_in_usd)
sueldos %>% select(work_year, experience_level, job_title) %>% arrange(salary_in_usd)
dplyr::
sueldos %>% select(work_year, experience_level, job_title) %>% dplyr::arrange(salary_in_usd)
mi_tabla %>%
select(everything()) %>%  # Selecciona todas las columnas
arrange(salary_in_usd_mm)          # Ordena por 'campo1'
mi_tabla %>%
select(everything()) %>%  # Selecciona todas las columnas
arrange(salary_in_usd_mm)          # Ordena por 'campo1'
sueldos %>%
select(everything()) %>%  # Selecciona todas las columnas
arrange(salary_in_usd_mm)          # Ordena por 'campo1'
sueldos %>% select(everything()) %>%  arrange(sueldos$salary_in_usd)
sueldos %>% select(everything()) %>%  arrange(salary_in_usd)
sueldos %>% select(work_year, experience_level, job_title) %>%  arrange(salary_in_usd)
sueldos %>% select(work_year, experience_level, job_title) %>%  arrange(sueldos$salary_in_usd)
sueldos %>%
select(work_year, experience_level, job_title) %>%
arrange(sueldos$salary_in_usd)
sueldos %>%
select(work_year, experience_level, job_title, salary_in_usd) %>%
arrange(sueldos$salary_in_usd)
?arrange
sueldos %>%
select(work_year, experience_level, job_title, salary_in_usd) %>%
arrange(desc(sueldos$salary_in_usd))
sueldos %>%
select(work_year, experience_level, job_title, salary_in_usd) %>%
arrange(desc(sueldos$salary_in_usd))
library(tidyverse)
mf %>%
mutate(
a = y * x,
b = a ^ 2,
) %>%
show_query()
mf <- memdb_frame(x = 1, y = 2)
mf %>%
mutate(
a = y * x,
b = a ^ 2,
) %>%
show_query()
mf <- memdb_frame(x = 1, y = 2)
install.packages("rmarkdown")
install.packages("pacman")
pacman::p_load(
rio,        # importación/exportación de múltiples tipos de datos
here,       # ruta relativa de los archivos
janitor,    # limpieza de datos y tablas
lubridate,  # trabajar con fechas
epikit,     # función age_categories()
tidyverse   # gestión y visualización de datos
)
# importacion de datos:
linelist_raw <- import("salaries.csv")
View(linelist_raw)
?import
# importacion de datos:
salaries <- import("salaries.csv")
# importacion de datos:
salaries <- import("salaries.csv")
View(salaries)
head(salaries)
# vision general del data frame
skimr::skim(salaries)
install.packages("skimr")
skimr::skim(salaries)
# nombre de columnas
names(salaries)
# importacion de datos:
salaries_raw <- import("salaries.csv")
# vision general del data frame
skimr::skim(salaries_raw)
# nombre de columnas
names(salaries_raw)
# Limpieza automatica de datos (nombres de columnas)
# enlaza el conjunto de datos con un pipe a la función clean_names(), y el resultado lo guarda como "linelist"
salaries <- salaries_raw %>%
janitor::clean_names()
# ver los nombres de las columnas
names(salaries)
summary(salaries)
# Resumen de los datos
dim(sueldos) # dimensiones del conjunto de datos
library(readxl)
library(ggplot2)
library(ggthemes)
library(corrplot)
library(tidyverse)
sueldos <- read.csv("salaries.csv", sep = ";")
View(sueldos) #Opcional, es solo para ver los datos en una tabla.
# Resumen de los datos
dim(sueldos) # dimensiones del conjunto de datos
names(sueldos) # nombres de las columnas
str(sueldos) # estructura del conjunto de datos
summary(sueldos) # resumen estadístico del conjunto de datos
# Datos faltantes
sum(is.na(sueldos)) # total de datos faltantes
colSums(is.na(sueldos)) # datos faltantes por columna
as_tibble(sueldos)
#filtramos solo los empleados de AUSTRALIA
sueldos %>% filter(employee_residence == "AU")
#filtramos solo los empleados de AUSTRALIA
sueldos %>% filter(employee_residence == "CA")
sueldos %>% select(employee_residence) %>% distinct()
sueldos %>% select(work_year) %>% distinct()
sueldos %>% select(experience_level) %>% distinct()
sueldos %>% select(salary_currency) %>% distinct()
#cuenta los valores agrupados por
sueldos %>% group_by(experience_level) %>% summarise(n())
# lo mismo, pero agregar un count
sueldos %>% group_by(company_size) %>% summarise(total_salary = sum(salary_in_usd), count = n())
sueldos %>% select(work_year, experience_level, job_title)
sueldos %>%
select(work_year, experience_level, job_title, salary_in_usd) %>%
arrange(desc(sueldos$salary_in_usd))
subset(sueldos, sueldos$employee_residence  == "AU")
sueldos %>% select(everything()) %>% filter(work_year == '2024')
view(sueldos)
sueldos$salary_in_usd / 1000
sumary(sueldos)
summary(sueldos)
# Creamos una nueva columna para salary_in_usd en miles de dólares
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
summary(sueldos)
ggplot(sueldos, aes(x=company_location, y=salary_in_usd_mm)) + geom_boxplot()
ggplot(sueldos, aes(x=experience_level, y=salary_in_usd_mm)) + geom_boxplot()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot()
library(tidyverse)
# Crear un data frame de ejemplo
datos <- data.frame(
ID = 1:5,
Enero = c(10, 15, 20, 12, 18),
Febrero = c(8, 14, 22, 10, 16)
)
# Convertir columnas anchas (Enero, Febrero) en filas largas
datos_long <- datos %>%
pivot_longer(cols = c(Enero, Febrero), names_to = "Mes", values_to = "Valor")
# Convertir filas largas en columnas anchas
datos_ancho <- datos_long %>%
pivot_wider(names_from = Mes, values_from = Valor)
# Ver los resultados
print(datos_long)
print(datos_ancho)
sueldos %>% select(employee_residence) %>% distinct()
sueldos %>% select(work_year) %>% distinct()
sueldos %>% select(experience_level) %>% distinct()
sueldos %>% select(salary_currency) %>% distinct()
sueldos %>% select(employee_residence) %>% distinct()
names(sueldos)
str(sueldos) # estructura del conjunto de datos
summary(sueldos) # resumen estadístico del conjunto de datos
sueldos <- read.csv("salaries.csv", sep = ";")
View(sueldos) #Opcional, es solo para ver los datos en una tabla.
sueldos <- read.csv("salaries.csv", sep = ";")
sueldos <- read.csv("salaries.csv", sep = ";")
```{r}
summary(sueldos)
sueldos <- read.csv("salaries.csv", sep = ";")
```{r}
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
summary(sueldos)
library(tidyverse)
ggplot(sueldos, aes(x=company_location, y=salary_in_usd_mm)) + geom_boxplot()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot()
sueldos <- read.csv("salaries.csv", sep = ";")
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
summary(sueldos)
ggplot(sueldos, aes(x=workyear)
ggplot(sueldos, aes(x=workyear))
ggplot(sueldos, aes(x=workyear)) + geom_histogram()
ggplot(sueldos, aes(x=work_year)) + geom_histogram()
ggplot(sueldos, aes(x=work_year)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)+
geom_histogram(fill = "white", bins = 15)
ggplot(sueldos, aes(x=work_year)) + geom_histogram(bins = 15) +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year, y=salary_in_usd_mm)) + geom_histogram(bins = 15) +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year, y=salary_in_usd_mm)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=salary_in_usd_mm)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(y=salary_in_usd_mm)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year ,y=salary_in_usd_mm)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
ggplot(sueldos, aes(x=work_year)) + geom_histogram() +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
)
setwd("C:/Users/jorge/OneDrive/MAGISTER/01/PROGRAMACION EN R/Programacion-R-UDLA/Programacion-R-UDLA")
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5)) +
theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5)) +
labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "Por pais", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
) +
theme(plot.title = element_text(hjust = 0.5))
---
title: "Dataset 'Salaries' - Analisis Estadistico - UDLA - MDS"
```{r message=FALSE, warning=FALSE}
#Librerias utilizadas en el analisis.
library(readxl)
# vision general del data frame
skimr::skim(salaries_raw)
# importacion de datos:
salaries_raw <- import("salaries.csv")
# vision general del data frame
skimr::skim(salaries_raw)
dim(sueldos) # dimensiones del conjunto de datos
sueldos <- read.csv("salaries.csv", sep = ";")
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
dim(sueldos) # dimensiones del conjunto de datos
names(sueldos) # nombres de las columnas
str(sueldos) # estructura del conjunto de datos
summary(sueldos) # resumen estadístico del conjunto de datos
skim(sueldos)
#Librerias utilizadas en el analisis.
library(readxl)
library(ggplot2)
library(ggthemes)
library(corrplot)
library(tidyverse)
library(skimr)
sueldos <- read.csv("salaries.csv", sep = ";")
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
dim(sueldos) # dimensiones del conjunto de datos
names(sueldos) # nombres de las columnas
str(sueldos) # estructura del conjunto de datos
summary(sueldos) # resumen estadístico del conjunto de datos
skim(salaries_raw)
#Librerias utilizadas en el analisis.
library(readxl)
library(ggplot2)
library(ggthemes)
library(corrplot)
library(tidyverse)
library(skimr)
sueldos <- read.csv("salaries.csv", sep = ";")
sueldos$salary_in_usd_mm <- sueldos$salary_in_usd / 1000
dim(sueldos) # dimensiones del conjunto de datos
names(sueldos) # nombres de las columnas
str(sueldos) # estructura del conjunto de datos
summary(sueldos) # resumen estadístico del conjunto de datos
skim(sueldos)
?ggplot
?ggplot2
setwd("C:/Users/jorge/OneDrive/MAGISTER/01/PROGRAMACION EN R/Programacion-R-UDLA/Programacion-R-UDLA")
# Verifica la ubicación actual del directorio temporal
tempdir()  # Debería mostrar algo como "C:\\Users\\XYZ~1\\AppData\\Local\\Temp\\Rtmp86bEoJ\\Rtxt32dcef24de2"
# Crea nuevamente el directorio temporal
dir.create(tempdir())
?read.csv
?ggplot2
?theme
?ggplot2
ggplot(sueldos, aes(x=work_year)) + geom_histogram(binwidth = 0.5) +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
) +
theme_clean()
?ggplot2
ggplot(sueldos, aes(x=work_year)) + geom_histogram(binwidth = 0.5) +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
) +
theme_stata()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5)) +
theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5)) +
labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
) +
theme(plot.title = element_text(hjust = 0.5))+
theme_dark()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5)) +
theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5)) +
labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
) +
theme(plot.title = element_text(hjust = 0.5))+
theme_stata()
?ggplot2
ggplot(sueldos, aes(x=work_year)) + geom_histogram(binwidth = 0.5) +
labs(
title = "Sueldos Profesionales Data Science", # Título del gráfico
#subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "Año", # Etiqueta del eje X
y = "Sueldo en Dolares" # Etiqueta del eje Y
) +
theme_economist()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5)) +
theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5)) +
labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
) +
theme(plot.title = element_text(hjust = 0.5))+
theme_light()
ggplot(sueldos, aes(x=employment_type, y=salary_in_usd_mm)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=0.5)) +
theme(plot.margin = margin(t = 20, r = 50, b = 40, l = 10)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5)) +
labs(
title = "Sueldos en MM Dolares", # Título del gráfico
subtitle = "", # Subtítulo del gráfico
#caption = "", # Nota al pie del gráfico
x = "País", # Etiqueta del eje X
y = "Sueldo en Miles de Dolares" # Etiqueta del eje Y
) +
theme(plot.title = element_text(hjust = 0.5))+
theme_minimal()
unlink("index_cache", recursive = TRUE)
